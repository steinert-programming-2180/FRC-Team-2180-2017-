// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2180.StrongHold.commands;

import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2180.StrongHold.Robot;
import org.usfirst.frc2180.StrongHold.RobotMap;

/**
 *
 */
public class AutonomousCommand extends Command {
	double startTime, currentTime;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public AutonomousCommand() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.robotChassis);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	startTime = Timer.getFPGATimestamp();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	RobotMap.robotChassisCANTalon1.set(0.5);
    	RobotMap.robotChassisCANTalon2.set(0.5);
    	currentTime = Timer.getFPGATimestamp();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	if ((currentTime-startTime)< 7){
    		return false;
    	}else{
    		return true;
    	}
    }

    // Called once after isFinished returns true
    protected void end() {
    	RobotMap.robotChassisCANTalon1.set(0.0);
    	RobotMap.robotChassisCANTalon2.set(0.0);
    		while((currentTime-startTime)<7) {
    			currentTime = Timer.getFPGATimestamp();
    			RobotMap.robotChassisCANTalon1.set(0.5);
    			RobotMap.robotChassisCANTalon2.set(0.5);
    		}
    		RobotMap.robotChassisCANTalon1.set(0.0);
    		RobotMap.robotChassisCANTalon2.set(0.0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    }
}
