// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2180.StrongHold;

import com.ctre.CANTalon;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Servo;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon robotChassisCANTalon1;
    public static CANTalon robotChassisCANTalon2;
    public static RobotDrive robotChassisRobotDrive21;
    public static Servo robotChassisBrakeRight;
    public static Servo robotChassisBrakeLeft;
    public static CANTalon loaderPickUp;
    public static Compressor pneumaticsArmCompressor1;
    public static DoubleSolenoid pneumaticsArmDoubleSolenoid1;
    public static CANTalon shooterShootingController;
    public static DoubleSolenoid pneumaticsDoubleSolenoid3;
    public static CANTalon turnTableTurnTable;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        robotChassisCANTalon1 = new CANTalon(0);
        LiveWindow.addActuator("RobotChassis", "CAN Talon 1", robotChassisCANTalon1);
        
        robotChassisCANTalon2 = new CANTalon(1);
        LiveWindow.addActuator("RobotChassis", "CAN Talon 2", robotChassisCANTalon2);
        
        robotChassisRobotDrive21 = new RobotDrive(robotChassisCANTalon1, robotChassisCANTalon2);
        
        robotChassisRobotDrive21.setSafetyEnabled(true);
        robotChassisRobotDrive21.setExpiration(0.1);
        robotChassisRobotDrive21.setSensitivity(0.5);
        robotChassisRobotDrive21.setMaxOutput(1.0);

        robotChassisBrakeRight = new Servo(2);
        LiveWindow.addActuator("RobotChassis", "BrakeRight", robotChassisBrakeRight);
        
        robotChassisBrakeLeft = new Servo(3);
        LiveWindow.addActuator("RobotChassis", "BrakeLeft", robotChassisBrakeLeft);
        
        loaderPickUp = new CANTalon(4);
        LiveWindow.addActuator("Loader", "PickUp", loaderPickUp);
        
        pneumaticsArmCompressor1 = new Compressor(0);
        
        
        pneumaticsArmDoubleSolenoid1 = new DoubleSolenoid(0, 0, 1);
        LiveWindow.addActuator("PneumaticsArm", "Double Solenoid 1", pneumaticsArmDoubleSolenoid1);
        
        shooterShootingController = new CANTalon(3);
        LiveWindow.addActuator("Shooter", "ShootingController", shooterShootingController);
        
        pneumaticsDoubleSolenoid3 = new DoubleSolenoid(0, 4, 5);
        LiveWindow.addActuator("Pneumatics", "Double Solenoid 3", pneumaticsDoubleSolenoid3);
        
        turnTableTurnTable = new CANTalon(2);
        LiveWindow.addActuator("TurnTable", "TurnTable", turnTableTurnTable);
        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
